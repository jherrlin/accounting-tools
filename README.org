
#+NAME: sie-file-utf8
#+BEGIN_SRC shell :results output code
  iconv -f CP437 -t UTF-8 ~/Downloads/5555555555_2020.se -o - | sed 's/\r//g' | tee /tmp/5555555555_2020.se-utf8
#+END_SRC

#+NAME: ledger-file
#+BEGIN_SRC awk :results none :stdin sie-file-utf8
  BEGIN { ledger="/tmp/ledger.ledger"; basfile="/tmp/bas-konton.txt"}
  $0 ~ /^#KONTO/ { kod=$2; $1=$2=""; gsub(/^\s*"|".*$/, "", $0); printf("%s|%s\n", kod, $0) > basfile }
  $0 ~ /^}/ { printf("\n") > ledger }
  $0 ~ /^{/ { next }
  $0 ~ /^#VER/ \
  {
      gsub(/\r$|"/, "", $0);
      datetime=$NF;
      v=$3;
      $1=$2=$3=$4=$NF="";
      gsub(/^\s*/, "", $0);
      split(datetime, d, "")
      printf("%s%s%s%s-%s%s-%s%s * %s\n%6s :verification-nr:%s\n", d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8], $0, ";;", v) > ledger
  }
  $1 ~ /^#TRANS/ { $1=$3=""; split($2, a, ""); gsub(/\r$/, "", $4); printf("%5s:%s:%s:%s%41s SEK\n", a[1], a[2], a[3], a[4], $4) > ledger }
#+END_SRC

#+NAME: ledger-file-with-db-layer
#+BEGIN_SRC awk :results output code :in-file /tmp/bas-konton.txt /tmp/ledger.ledger
  function konton() { return FILENAME ~ /bas-konton.txt/ }
  function ledger() { return FILENAME ~ /.ledger/}

  BEGIN                 { FS="|"; d="Debet"; k="Kredit"}
  konton()              { accounts[$1]=$2 }
  ledger() && FS == "|" { FS=" " }
  ledger() && $0 ~ /include/ { next }   # Skip include lines
  ledger() && $1 ~ /^[0-9]:/ \
  {
      if       (substr($1, 0, 1) == 1 && substr($2, 0, 1) == "-") { type=k }
      else if  (substr($1, 0, 1) == 1 && substr($2, 0, 1) != "-") { type=d }

      else if  (substr($1, 0, 1) == 2 && substr($2, 0, 1) == "-") { type=k }
      else if  (substr($1, 0, 1) == 2 && substr($2, 0, 1) != "-") { type=d }

      else if  (substr($1, 0, 1) == 3 && substr($2, 0, 1) == "-") { type=k }
      else if  (substr($1, 0, 1) == 3 && substr($2, 0, 1) != "-") { type=d }

      else if  (substr($1, 0, 1) >= 4 && substr($1, 0, 1) <= 8 && substr($2, 0, 1) == "-") { type=k }
      else if  (substr($1, 0, 1) >= 4 && substr($1, 0, 1) <= 8 && substr($2, 0, 1) != "-") { type=d }
  }
  ledger() && $1  ~ /^[0-9]:/  { a=$1; gsub(":", "", a); printf("%s ; %4s ; %-6s ; %s\n", $0, a, type, accounts[a]) }
  ledger() && $1 !~ /^[0-9]:/  { print }
#+END_SRC

#+BEGIN_SRC awk :results output code :stdin ledger-file-with-db-layer
  BEGIN { FS=";"}
  $0 ~ /^\s+[0-9]/ { acc[$2] = $4 }
  END { for (a in acc) { printf("| %s | %-70s |\n", a ,acc[a]) | "sort" }}
#+END_SRC
